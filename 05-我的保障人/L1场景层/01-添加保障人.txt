*** Settings ***
Resource          ../../通用/L2接口层/登录.txt
Resource          ../../通用/L2接口层/保障人.txt
Resource          ../L3DB层/insured.txt
Resource          ../L2接口层/查询某保障人.txt
Resource          ../../资源/清理数据.txt
Resource          ../L2接口层/删除保障人.txt
Resource          ../../通用/L2接口层/保障人.txt

*** Test Cases ***
保障人在该账户不存在
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人不存在；身份证号：110101198810208393；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000300账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000300获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）查询该用户中该保障人的信息，校验保障人信息字段：姓名、身份证号、公司、行业、职业、职位、邮箱、性别
    [Tags]    wsong
    [Setup]
    #登录获取Cookie    #手机号    #验证码
    ${用户手机号}    set variable    23810000300
    自动生成验证码登录    ${用户手机号}
    #我的保障人中添加保障人
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    保障人不存在
    ${保障人身份证号}    set variable    110101198810208393
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    #校验Db中的保障人信息
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #查询并校验保障人的信息
    ${保障人信息}    查询某保障人信息    ${保障人Id}
    校验某保障人信息    ${保障人信息}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    [Teardown]    清理保障人信息    ${用户手机号}    110101198810208393

保障人在别人账户存在，该账户不存在
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人在别人账户存在；身份证号：110101198810206136；公司：武汉国有资产经营公司；行业：政府机关；职业：公务员；职位：公务员；邮箱：23@qq.la
    ...
    ...    2）13410000301和13410000302账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000301获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）13410000302再获取登录Cookie
    ...
    ...    5）也同样在我的保障人中添加保障人A
    ...
    ...    6）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    23@qq.la
    ${保障人职位}    set variable    公务员
    ${保障人职业}    set variable    公务员
    ${保障人行业}    set variable    政府机关
    ${保障人公司}    set variable    武汉国有资产经营公司
    ${保障人姓名}    set variable    保障人在别人账户存在
    ${保障人身份证号}    set variable    110101198810206136
    #保障人在A账户存在
    ##A账户登录
    ${用户A手机号}    set variable    23810000301
    ${用户B手机号}    set variable    23810000302
    自动生成验证码登录    ${用户A手机号}
    ##A账户添加该保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    校验添加保障人后的DB信息    ${用户A手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #在B账户添加该保障人
    ##B账户登录
    自动生成验证码登录    ${用户B手机号}
    ##B账户添加该保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    校验添加保障人后的DB信息    ${用户B手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    [Teardown]    清理多个保障人信息    110101198810206136    ${用户A手机号}    ${用户B手机号}

保障人在该账户已存在
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人已存在；身份证号：110101198810209636；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000303账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000303获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）添加成功后，再添加该保障人
    ...
    ...    5）校验该接口返回的错误信息：该保障人已存在
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    保障人已存在
    ${保障人身份证号}    set variable    110101198810209636
    #添加保障人
    ##用户登录
    ${用户手机号}    set variable    23810000303
    自动生成验证码登录    ${用户手机号}
    ##添加保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    ##校验Db中的保障人信息
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #继续添加该保障人
    我的保障人添加保障人失败    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}    ${保障人职位}
    ...    ${保障人邮箱}    "该保障人已存在"
    [Teardown]    清理保障人信息    ${用户手机号}    110101198810209636

删除保障人后，再添加该保障人
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人删除后再添加；身份证号：110101198810205133；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000304账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000304获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A，校验Db信息，包含insured、insured_idcards，校验保障人是否添加成功
    ...
    ...    3）删除保障人A，校验DB信息，校验保障人是否删除成功
    ...
    ...    4）再添加保障人A，校验DB信息，校验保障人是否添加成功
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    保障人删除后再添加
    ${保障人身份证号}    set variable    110101198810205133
    #登录获取Cookie    #手机号    #验证码
    ${用户手机号}    set variable    23810000304
    自动生成验证码登录    ${用户手机号}
    #添加保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #删除保障人
    删除保障人成功    ${保障人Id}
    校验删除保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #再次添加该保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    [Teardown]    清理保障人信息    ${用户手机号}    110101198810205133

添加保障人时年龄小于18岁
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人年龄小于18岁；身份证号：110101199910014937；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000313账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000313获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A，A的年龄小于18岁
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）查询该用户中该保障人的信息，校验保障人信息字段：姓名、身份证号、公司、行业、职业、职位、邮箱、性别
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    保障人年龄小于18岁
    ${保障人身份证号}    set variable    110101199910014937
    #添加保障人
    ##用户登录
    ${用户手机号}    set variable    23810000313
    自动生成验证码登录    ${用户手机号}
    ##添加保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    #校验Db中的保障人信息
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #查询并校验保障人的信息
    ${保障人信息}    查询某保障人信息    ${保障人Id}
    校验某保障人信息    ${保障人信息}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    [Teardown]    清理保障人信息    ${用户手机号}    110101199910014937

添加保障人时年龄大于50岁
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人年龄大于50岁；身份证号：110101196510018476；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000317账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000317获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A，A的年龄大于50岁
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）查询该用户中该保障人的信息，校验保障人信息字段：姓名、身份证号、公司、行业、职业、职位、邮箱、性别
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    保障人年龄大于50岁
    ${保障人身份证号}    set variable    110101196510018476
    #添加保障人
    ##用户登录
    ${用户手机号}    set variable    23810000317
    自动生成验证码登录    ${用户手机号}
    ##添加保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    #校验Db中的保障人信息
    校验添加保障人后的DB信息    ${用户手机号}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    #查询并校验保障人的信息
    ${保障人信息}    查询某保障人信息    ${保障人Id}
    校验某保障人信息    ${保障人信息}    ${保障人Id}    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}
    ...    ${保障人职业}    ${保障人职位}    ${保障人邮箱}
    [Teardown]    清理保障人信息    ${用户手机号}    110101196510018476

添加保障人时必填字段错误
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：；身份证号：110101198810209636；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000314账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000314获取登录Cookie
    ...
    ...    2）添加保障人时，保障人姓名未设置，校验错误信息
    ...
    ...    3）添加保障人时，保障人身份证号未设置，校验错误信息
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    #姓名为空
    ${保障人姓名}    set variable
    ${保障人身份证号}    set variable    110101198810209636
    #添加保障人
    ##用户登录
    ${用户手机号}    set variable    23810000314
    自动生成验证码登录    ${用户手机号}
    ##添加保障人
    我的保障人添加保障人失败    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}    ${保障人职位}
    ...    ${保障人邮箱}    "Real Name不能为空。"
    #身份证号为空
    ${保障人姓名}    set variable    身份证号为空
    ${保障人身份证号}    set variable
    我的保障人添加保障人失败    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}    ${保障人职位}
    ...    ${保障人邮箱}    "Card No不能为空。"
    [Teardown]    清理保障人信息    ${用户手机号}    110101198810209636

添加姓名不同，但身份证一致的保障人
    [Documentation]    【前置条件】
    ...
    ...    1）保障人A信息：姓名：保障人已存在；身份证号：110101198810209636；公司：北京阿博茨科技有限公司；行业：IT业；职业：测试；职位：测试工程师；邮箱：test@niub.la
    ...
    ...    2）13410000303账号未添加保障人A
    ...
    ...    【步骤】
    ...
    ...    1）13410000303获取登录Cookie
    ...
    ...    2）在我的保障人中添加保障人A
    ...
    ...    3）校验Db信息，包含insured、insured_idcards，判断保障人是否添加成功
    ...
    ...    4）添加成功后，再添加该保障人
    ...
    ...    5）校验该接口返回的错误信息：该保障人已存在
    [Tags]    wsong
    [Setup]
    #保障人信息
    ${保障人邮箱}    set variable    test@niub.la
    ${保障人职位}    set variable    测试工程师
    ${保障人职业}    set variable    测试
    ${保障人行业}    set variable    IT业
    ${保障人公司}    set variable    北京阿博茨科技有限公司
    ${保障人姓名}    set variable    姓名不同
    ${保障人身份证号}    set variable    110101198810206451
    #用户登录
    ${用户手机号}    set variable    23810000315
    自动生成验证码登录    ${用户手机号}
    #初次添加保障人
    ${保障人Id}    我的保障人添加保障人成功    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}
    ...    ${保障人职位}    ${保障人邮箱}
    #姓名不同，身份证一致
    ${保障人姓名}    set variable    新姓名
    #继续添加该保障人
    我的保障人添加保障人失败    ${保障人姓名}    ${保障人身份证号}    ${保障人公司}    ${保障人行业}    ${保障人职业}    ${保障人职位}
    ...    ${保障人邮箱}    "该保障人已存在"
    [Teardown]    清理保障人信息    ${用户手机号}    110101198810206451
