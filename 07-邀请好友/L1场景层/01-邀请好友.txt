*** Settings ***
Resource          ../../通用/L2接口层/登录.txt
Resource          ../L2接口层/邀请好友.txt
Resource          ../L3DB层/campaign_inviter.txt
Resource          ../../通用/L2接口层/计划.txt
Resource          ../L2接口层/余额.txt
Resource          ../../资源/清理数据.txt

*** Test Cases ***
邀请新用户注册且加入
    [Documentation]    【前置条件】
    ...
    ...    1）13410000600账号未邀请过用户
    ...
    ...    2）13410000601是未注册用户
    ...
    ...    3）110101198810207390未加入计划
    ...
    ...    【步骤】
    ...
    ...    1）邀请者A 13410000600登录，进入邀请好友页
    ...
    ...    2）被邀请者B 13410000601通过A邀请好友的链接登录
    ...
    ...    3）B注册后，校验A和B的绑定关系
    ...
    ...    4）B添加保障人（保障人姓名：被邀请加入计划，保障人身份证号：110101198810207390）并加入计划
    ...
    ...    5）B加入计划后，校验A和B的绑定关系各字段
    ...
    ...    6）校验A中账户余额的变化，邀请后余额=邀请前余额+邀请个数*邀请奖励
    ...
    ...    7）校验A中邀请详情页的展示
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000600
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000601
    ${被邀请者B验证码}    根据手机号生成验证码    ${被邀请者B手机号}
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    #邀请者A获取Cookie
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    #被邀请者B登录
    被邀请者登录    ${被邀请者B手机号}    ${被邀请者B验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}
    #校验B注册，A和B的关系
    校验注册后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}
    #被邀请者B加入计划
    获取登录态    ${被邀请者B手机号}    ${被邀请者B验证码}
    单个保障人微信加入计划    被邀请加入计划    110101198810207390    ${计划类型}    ${被邀请者B手机号}
    #校验B加入，A和B的关系
    校验加入计划后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}    ${计划类型}
    #校验账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    校验邀请好友后的余额变化    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}    1
    #校验邀请者A我的邀请
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    查看并校验邀请详情页内容    ${被邀请者B手机号}    已成功
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}

邀请新用户注册未加入
    [Documentation]    【前置条件】
    ...
    ...    1）13410000602账号未邀请过用户
    ...
    ...    2）13410000603是未注册用户
    ...
    ...    【步骤】
    ...
    ...    1）邀请者A 13410000602登录，进入邀请好友页
    ...
    ...    2）被邀请者B 13410000603通过A邀请好友的链接登录
    ...
    ...    3）B注册后，校验A和B的绑定关系
    ...
    ...    4）校验A中账户余额的变化，邀请后余额=邀请前余额，没加入计划，因此没有奖励
    ...
    ...    5）校验A中邀请详情页的展示
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000602
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000603
    ${被邀请者B验证码}    根据手机号生成验证码    ${被邀请者B手机号}
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    #邀请者A获取Cookie
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    #被邀请者B登录
    被邀请者登录    ${被邀请者B手机号}    ${被邀请者B验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}
    #校验B注册，A和B的关系
    校验注册后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}
    #校验账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    Should Be Equal As Strings    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}
    #校验邀请者A我的邀请
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    查看并校验邀请详情页内容    ${被邀请者B手机号}    待加入
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}

邀请新用户注册，30天后邀请关系过期
    [Documentation]    【前置条件】
    ...
    ...    1）13410000604账号未邀请过用户
    ...
    ...    2）13410000605是未注册用户
    ...
    ...    【步骤】
    ...
    ...    1）邀请者A 13410000604登录，进入邀请好友页
    ...
    ...    2）被邀请者B 13410000605通过A邀请好友的链接登录
    ...
    ...    3）B注册后，校验A和B的绑定关系各字段
    ...
    ...    4）修改邀请关系中的过期时间，将时间修改到30天前
    ...
    ...    5）校验A中邀请详情页的展示
    ...
    ...    6）校验A中账户余额的变化，邀请后余额=邀请前余额，绑定关系已过期，因此没有奖励
    ...
    ...    7）绑定关系过期后，校验A和B的绑定关系各字段
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000604
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000605
    ${被邀请者B验证码}    根据手机号生成验证码    ${被邀请者B手机号}
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    #邀请者A获取Cookie
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    #被邀请者B登录
    被邀请者登录    ${被邀请者B手机号}    ${被邀请者B验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}
    #校验B注册，A和B的关系
    校验注册后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}
    #模拟30天过期场景
    修改邀请表中的过期时间    ${邀请者A手机号}    ${被邀请者B手机号}    30
    #校验邀请者A我的邀请
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    查看并校验邀请详情页内容    ${被邀请者B手机号}    已失效
    #校验账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    Should Be Equal As Strings    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}
    #校验关系过期后DB字段
    校验过期后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}

邀请老用户加入
    [Documentation]    【前置条件】
    ...
    ...    1）13410000606账号未邀请过用户
    ...
    ...    2）13410000607是未注册用户
    ...
    ...    【步骤】
    ...
    ...    1）被邀请者B 13410000607先登录，使得该用户变成老用户
    ...
    ...    2）邀请者A 13410000600登录，进入邀请好友页
    ...
    ...    3）被邀请者B 13410000601再通过邀请好友的链接登录
    ...
    ...    4）B登录后，校验A和B的绑定关系是否存在
    ...
    ...    5）B添加保障人（保障人姓名：老用户加入计划，保障人身份证号：110101198810206451）并加入计划
    ...
    ...    6）B加入计划后，校验A中账户余额的变化，邀请后余额=邀请前余额
    ...
    ...    7）校验A中邀请详情页的展示，邀请详情页不包含被邀请者B的信息
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000606
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000607
    ${被邀请者B验证码}    根据手机号生成验证码    ${被邀请者B手机号}
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    #被邀请者B登录    #使得用户B变成老用户
    获取登录态    ${被邀请者B手机号}    ${被邀请者B验证码}
    #邀请者A获取Cookie
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    #被邀请者B登录
    被邀请者登录    ${被邀请者B手机号}    ${被邀请者B验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}
    #校验B登录，A和B的关系
    校验绑定关系不存在    ${邀请者A手机号}    ${被邀请者B手机号}
    #被邀请者B加入计划
    获取登录态    ${被邀请者B手机号}    ${被邀请者B验证码}
    单个保障人微信加入计划    老用户加入计划    110101198810206451    ${计划类型}    ${被邀请者B手机号}
    #校验A账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    Should Be Equal As Strings    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}
    #校验邀请者A我的邀请
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${ResponseBody}    进入邀请详情页
    Should not contain    ${ResponseBody}    ${被邀请者B手机号}    #邀请详情中不包含B的信息
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}

邀请新用户注册，该用户加入两个计划
    [Documentation]    【前置条件】
    ...
    ...    1）13410000608账号未邀请过用户
    ...
    ...    2）13410000609是未注册用户
    ...
    ...    【步骤】
    ...
    ...    1）邀请者A 13410000608登录，进入邀请好友页
    ...
    ...    2）被邀请者B 13410000609通过A邀请好友的链接登录
    ...
    ...    3）B注册后，校验A和B的绑定关系
    ...
    ...    4）B添加保障人A并加入计划
    ...
    ...    5）B添加保障人B并加入计划
    ...
    ...    6）B加入计划后，校验A和B的绑定关系各字段
    ...
    ...    7）校验A中账户余额的变化，邀请后余额=邀请前余额+邀请个数*邀请奖励，邀请个数仍然为1
    ...
    ...    8）校验A中邀请详情页的展示
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000608
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000609
    ${被邀请者B验证码}    根据手机号生成验证码    ${被邀请者B手机号}
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    #邀请者A获取Cookie
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    #被邀请者B登录
    被邀请者登录    ${被邀请者B手机号}    ${被邀请者B验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}
    #校验B注册，A和B的关系
    校验注册后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}
    #被邀请者B-保障人A和B加入
    获取登录态    ${被邀请者B手机号}    ${被邀请者B验证码}
    单个保障人微信加入计划    保障人A    110101198810207796    ${计划类型}    ${被邀请者B手机号}
    单个保障人微信加入计划    保障人B    110101198810207956    ${计划类型}    ${被邀请者B手机号}
    #校验B加入，A和B的关系
    校验加入计划后的绑定关系    ${邀请者A手机号}    ${被邀请者B手机号}    ${计划类型}
    #校验账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    校验邀请好友后的余额变化    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}    1
    #校验邀请者A我的邀请
    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    查看并校验邀请详情页内容    ${被邀请者B手机号}    已成功
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}

邀请2个新用户注册且加入
    [Documentation]    【前置条件】
    ...
    ...    1）13410000613账号未邀请过用户
    ...
    ...    2）13410000614和13410000615是未注册用户
    ...
    ...    3）110101198810209118和110101198810203373未加入重疾无忧
    ...
    ...    【步骤】
    ...
    ...    1）邀请者A 13410000613登录，进入邀请好友页
    ...
    ...    2）被邀请者B 13410000614通过A邀请好友的链接登录
    ...
    ...    3）B注册后，校验A和B的绑定关系
    ...
    ...    4）B添加保障人（保障人姓名：被邀请者1，保障人身份证号：110101198810209118）并加入计划
    ...
    ...    5）B加入计划后，校验A和B的绑定关系各字段
    ...
    ...    6）校验A中邀请详情页的展示
    ...
    ...    7）被邀请者C 13410000615通过A邀请好友的链接登录
    ...
    ...    8）C注册后，校验A和C的绑定关系
    ...
    ...    9）C添加保障人（保障人姓名：被邀请者2，保障人身份证号：110101198810203373）并加入计划
    ...
    ...    10）C加入计划后，校验A和C的绑定关系各字段
    ...
    ...    11）校验A中邀请详情页的展示
    ...
    ...    12）校验A中账户余额的变化，邀请后余额=邀请前余额+邀请个数*邀请奖励
    [Tags]    wsong
    [Setup]
    #全局参数
    ${计划类型}    set variable    zjwy_product
    ${邀请者A手机号}    set variable    23810000613
    ${邀请者A验证码}    根据手机号生成验证码    ${邀请者A手机号}
    ${被邀请者B手机号}    set variable    23810000614
    ${被邀请者C手机号}    set variable    23810000615
    @{被邀请者手机号列表}    create list    ${被邀请者B手机号}    ${被邀请者C手机号}
    ${保障人信息列表}    create dictionary    被邀请者1=110101198810209118    被邀请者2=110101198810203373
    ${邀请者A邀请前余额}    查询账户余额    ${邀请者A手机号}
    @{保障人姓名列表}    Get dictionary keys    ${保障人信息列表}
    ${num}    set variable    0
    : FOR    ${被邀请者手机号}    IN    @{被邀请者手机号列表}
    \    ${保障人姓名}    set variable    ${保障人姓名列表[${num}]}
    \    ${保障人身份证号}    GET From dictionary    ${保障人信息列表}    ${保障人姓名}
    \    #邀请者A获取Cookie
    \    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    \    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}    ${utm_source}    进入邀请好友页    ${邀请者A手机号}
    \    #被邀请者登录
    \    ${被邀请者验证码}    根据手机号生成验证码    ${被邀请者手机号}
    \    被邀请者登录    ${被邀请者手机号}    ${被邀请者验证码}    ${guest_id}    ${PHPSESSID}    ${raw_utm_source}
    \    ...    ${utm_source}
    \    #校验B注册，A和B的关系
    \    校验注册后的绑定关系    ${邀请者A手机号}    ${被邀请者手机号}
    \    #被邀请者B加入计划
    \    获取登录态    ${被邀请者手机号}    ${被邀请者验证码}
    \    单个保障人微信加入计划    ${保障人姓名}    ${保障人身份证号}    ${计划类型}    ${被邀请者手机号}
    \    #校验B加入，A和B的关系
    \    校验加入计划后的绑定关系    ${邀请者A手机号}    ${被邀请者手机号}    ${计划类型}
    \    #校验邀请者A我的邀请
    \    获取登录态    ${邀请者A手机号}    ${邀请者A验证码}
    \    查看并校验邀请详情页内容    ${被邀请者手机号}    已成功
    \    ${num}    evaluate    ${num}+1
    #校验账户余额的变化
    ${邀请者A邀请后余额}    查询账户余额    ${邀请者A手机号}
    校验邀请好友后的余额变化    ${邀请者A邀请后余额}    ${邀请者A邀请前余额}    2
    [Teardown]    清理邀请关系    ${邀请者A手机号}    0    ${被邀请者B手机号}    ${被邀请者C手机号}
